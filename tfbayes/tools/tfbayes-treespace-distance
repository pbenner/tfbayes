#! /usr/bin/env python

# Copyright (C) 2014 Philipp Benner
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# imports
# ------------------------------------------------------------------------------

import sys
import getopt
import os
import tempfile

# local imports
# ------------------------------------------------------------------------------

from tfbayes.phylotree import *
from tfbayes.interface import sigint

# global options
# ------------------------------------------------------------------------------

options = {
    'verbose'             : False
    }

# usage
# ------------------------------------------------------------------------------

def usage():
    """Print usage."""
    print
    print "tfbayes-treespace-distance [option]... TREE_FILE1 TREE_FILE2"
    print
    print "Compute the geodesic length between two trees."
    print
    print "Options:"
    print
    print "   -h, --help                      - print help"
    print "   -v, --verbose                   - be verbose"
    print

# sample
# ------------------------------------------------------------------------------

def distance(tree_file1, tree_file2):
    tree1 = pt_root_t(tree_file1)
    tree2 = pt_root_t(tree_file2, tree1)
    print geodesic_t(tree1, tree2).length()

# main
# ------------------------------------------------------------------------------

def __main__():
    global options
    global results_config
    try:
        longopts   = ["help",
                      "verbose",
                      ]
        opts, tail = getopt.getopt(sys.argv[1:], "vh", longopts)
    except getopt.GetoptError:
        usage()
        return 2
    output = None
    if len(tail) != 2:
        usage()
        return 1
    # override those options with command line arguments
    for o, a in opts:
        if o in ("-v", "--verbose"):
            sys.stderr.write("Verbose mode turned on.\n")
            options["verbose"] = True
        if o in ("-h", "--help"):
            usage()
            return 0
    distance(*tail)
    return 0

if __name__ == "__main__":
    try:
        sys.exit(__main__())
    except IOError, e:
        sys.stderr.write('%s\n' % e)
        sys.exit(1)
